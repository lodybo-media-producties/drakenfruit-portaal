datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

enum Role {
  MAINTAINER
  ADMIN
  OFFICEMANAGER
  CONSULTANT
  PROJECTLEADER
}

enum PasswordType {
  ACTIVE
  MULTIFACTOR
  MUSTCHANGE
  RESET
}

model Organisation {
  id String @id @default(cuid())

  name        String
  description String

  projects Project[]

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id String @id @default(cuid())

  name        String
  description String

  organisation   Organisation @relation(fields: [organisationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  organisationId String

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id String @id @default(cuid())

  avatarUrl String?

  email    String    @unique
  password Password?

  firstName String
  lastName  String
  role      Role
  locale    String

  organisation   Organisation @relation(fields: [organisationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  organisationId String

  projects Project[]
  articles Article[]

  bookmarks String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  hash String

  type PasswordType

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Article {
  id String @id @default(cuid())

  image String

  published Boolean @default(true)

  /// [Translated]
  title Json

  /// [Translated]
  content Json

  /// [Translated]
  summary Json

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  categories Category[]

  /// [Translated]
  slug Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tool {
  id String @id @default(cuid())

  /// [Translated]
  name Json

  /// [Translated]
  slug Json

  /// [Translated]
  summary Json

  /// [Translated]
  description Json

  filename String

  image String

  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Webinar {
  id String @id @default(cuid())

  /// [Translated]
  title Json

  /// [Translated]
  description Json

  link String

  /// [Translated]
  transcript Json?

  /// [Translated]
  slides Json?

  /// [Translated]
  tools Json?

  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(cuid())

  /// [Translated]
  name Json

  /// [Translated]
  description Json

  /// [Translated]
  slug Json

  Articles Article[]
  Tools    Tool[]
  Webinars Webinar[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
